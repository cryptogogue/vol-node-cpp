
DONE: rework asset tracking - no generics; every asset to be unique
DONE: decide on final asset identifier format
DONE: implement asset customization (assets to be customized via methods)
DONE: card modification through crafting
DONE: variable-size transactions (multiple crafting commands per transaction)
DONE: template cards using SVG and mustache
DONE: expand schema to include svg templates
DONE: finalize schema - where do resources live?
DONE: wallet inventory - collection screen
DONE: wallet inventory - filtering
DONE: wallet inventory - printing
DONE: wallet inventory - indicate craftability
DONE: wallet inventory - crafting screen
DONE: wallet inventory - rendering svg for print
DONE: implement queue of transactions in wallet - rebuild state dynamically (from node)
DONE: rethink state handling in wallet
DONE: svg barcode
DONE: revise layout schema - address SVG shortcomings

----------------------------------------------------------------
NAMING

*Screen
*Form
*Picker
*Selector
*View
*Menu
*Button

*Controller
*Service

group in folders by functionality
don't mix controllers and displays

----------------------------------------------------------------
PLAYTEST

DONE: tool to generate set schema from XLS spreadsheet
DONE: add schema to genesis block
DONE: sign transaction
DONE: account permissions - god keys, publisher keys
DONE: identify (mining) networks (by genesis block) - name networks; i.e. test network, production network
DONE: commands for test account
DONE: provision every asset in set
DONE: provision beta account - generate key
DONE: add banner at the top of wallet showing mining network name
DONE: implement massively complicated layout engine
DONE: add support for QR codes
DONE: support loading genesis chain
DONE: layout engine - implement underline and divider
DONE: layout engine - bump icons up and down
DONE: layout engine - nested layouts
DONE: layout engine - set underline style for text box (color, weight)
DONE: layout engine - named text styles (implemented as spreadsheet macros)
DONE: upgrade & rebuild versioned store; restore from chain
DONE: inventory view - remove hardcoded card size
DONE: layout tool - schema from spreadsheet
DONE: layout tool - favicon
DONE: layout tool - cors-anywhere (fork and host) - sovled with nginx
DONE: layout tool - provision temporary assets based on * column
DONE: layout tool - finish automatic definition name generation
DONE: layout tool - implement INCLUDES directive
DONE: layout tool - as-defined sort order option
DONE: layout tool - fix space-before-line-break bug
DONE: inventory view - handle different sized cards
DONE: layout tool - handle oversized assets
DONE: layout tool - print layout for variable-sized assets
DONE: layout tool - factor out selection behavior (no tags)

node - batch transactions in solo mode
node - implement way to expire transactions
node - provision any asset
node - handle unrecognized account - reject transactions

node/schema - provision updated assets; link asset types between schemas (asset versioning)

wallet - (simple) tagging sets of cards and deck building
wallet - discard all (by set)

inventory view - better error reporting from card layouts (missing fonts, icons)


layout tool - finish docs + coding style guide

----------------------------------------------------------------
MVP

layout tool - line spacing
layout tool - kerning
layout tool - paragraph styles (leading indent)
layout tool - justify text
layout tool - layouts-as-icons (and/or "layered" icons)

batch transfer assets to other accounts
rework node control endpoints into "control" transactions

version versioned store (store metadata)

logic for attachments (i.e. equip one asset with another)

display all (historic) transactions of selected account
customize asset fields - images, text

validator app - scan the QR code and return raw card data including the owner

----------------------------------------------------------------
LAUNCH

VOL:ETH
VOL:ETH - onboarding
VOL:ETH - bearer bond vs oracles
