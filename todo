
DONE: rework asset tracking - no generics; every asset to be unique
DONE: decide on final asset identifier format
DONE: implement asset customization (assets to be customized via methods)
DONE: card modification through crafting
DONE: variable-size transactions (multiple crafting commands per transaction)
DONE: template cards using SVG and mustache
DONE: expand schema to include svg templates
DONE: finalize schema - where do resources live?
DONE: wallet inventory - collection screen
DONE: wallet inventory - filtering
DONE: wallet inventory - printing
DONE: wallet inventory - indicate craftability
DONE: wallet inventory - crafting screen
DONE: wallet inventory - rendering svg for print
DONE: implement queue of transactions in wallet - rebuild state dynamically (from node)
DONE: rethink state handling in wallet
DONE: svg barcode
DONE: revise layout schema - address SVG shortcomings

----------------------------------------------------------------
NAMING

*Screen
*Form
*Picker
*Selector
*View
*Menu
*Button

*Controller
*Service

group in folders by functionality
don't mix controllers and displays

----------------------------------------------------------------
PLAYTEST

DONE: tool to generate set schema from XLS spreadsheet
DONE: add schema to genesis block
DONE: sign transaction
DONE: account permissions - god keys, publisher keys
DONE: identify (mining) networks (by genesis block) - name networks; i.e. test network, production network
DONE: commands for test account
DONE: provision every asset in set
DONE: provision beta account - generate key
DONE: add banner at the top of wallet showing mining network name
DONE: implement massively complicated layout engine
DONE: add support for QR codes
DONE: support loading genesis chain
DONE: layout engine - implement underline and divider
DONE: layout engine - bump icons up and down
DONE: layout engine - nested layouts
DONE: layout engine - set underline style for text box (color, weight)
DONE: layout engine - named text styles (implemented as spreadsheet macros)
DONE: upgrade & rebuild versioned store; restore from chain
DONE: inventory view - remove hardcoded card size
DONE: layout tool - schema from spreadsheet
DONE: layout tool - favicon
DONE: layout tool - cors-anywhere (fork and host) - sovled with nginx
DONE: layout tool - provision temporary assets based on * column
DONE: layout tool - finish automatic definition name generation
DONE: layout tool - implement INCLUDES directive
DONE: layout tool - as-defined sort order option
DONE: layout tool - fix space-before-line-break bug
DONE: inventory view - handle different sized cards
DONE: layout tool - handle oversized assets
DONE: layout tool - print layout for variable-sized assets
DONE: layout tool - factor out selection behavior (no tags)
DONE: layout tool - finish docs + coding style guide
DONE: wallet - (simple) tagging sets of cards
DONE: upgrade assets
DONE: asset updates
DONE: wallet - fix asset display glitch (doesn't match cardmotron)
DONE: node - enforce block size limits (in points)
DONE: node - apply gratuity
DONE: create dump account
DONE: fix schema publishing (collisions)
DONE: add deck declarations to schema
DONE: add 'get deck' transaction type
DONE: wallet - add password option to transaction modal (to submit immediately)

----------------------------------------------------------------
BETA

DONE: crafting - booster packs
DONE: crafting - data tables (booster pack awards)
DONE: batch transfer assets to other accounts
DONE: wallet - popup when new assets received (hide assets until reviewed)
DONE: node - batch transactions in solo mode
DONE: wallet - show asset IDs in upgrades interface
DONE: wallet - roll crafting interface into inventory view
DONE: wallet - roll upgrades interface into inventory view
DONE: wallet - collapse identical cards in inventory view
DONE: wallet - add way to tag new assets (from inbox; supply default tag)
DONE: node - properly check account name changes to exclude illegal characters
DONE: wallet - validate name change requests
DONE: node - version mining node (with git hash)
DONE: wallet - show mining node version in dashboard view
DONE: node/schema - replace schema name with version (schema is a composite; one per ledger)
DONE: wallet - show schema version
DONE: node - handle unrecognized account - reject transactions
DONE: node - implement way to expire transactions
DONE: wallet - show transaction weight on transaction form
DONE: node - complete account renaming process

----------------------------------------------------------------
LAUNCH

node - sparse asset API (return sparse assets)
node - separate entropy from allure (allure computed simply - hash of block height; entropy is block height plus previous entropy signed by miner)
node - publish default media url prefix (from schema, with miner override)

schema - asset visualization descriptor (i.e. 2D/3D, front/back, language, etc.)
schema - asset definition inheritance (sparse updrages)
schema - customizable asset fields
schema - default tags?
schema - reserved asset fields?

wallet - detect stale keys (account name matches, but wrong/old key)
wallet - asset visualization selector
wallet - customize asset fields - images, text
wallet - add configurable media url prefix
wallet - schema explorer
wallet - display all (historic) transactions of selected account
wallet - filter inventory by asset exchange metadata
wallet - deck building - decks are sets of filters and quantities
wallet - discard all (by set)
wallet - provision local cards
wallet - network configuration screen (default transaction expiration, etc.)

validator app - scan the QR code and return raw card data including the owner

layout tool - better error reporting from card layouts (missing fonts, icons)
layout tool - line spacing
layout tool - kerning
layout tool - paragraph styles (leading indent)
layout tool - justify text
layout tool - layouts-as-icons (and/or "layered" icons)

node - finalize multi-part transaction implementation
node - reimplement 'run script' as multi-part transaction
node - implement field customization transaction
node - per asset modification metadata
node - record asset exchange metadata (inventory nonce, sender, note)
node - rework node control endpoints into "control" transactions

VOL:ETH
VOL:ETH - onboarding
VOL:ETH - bearer bond vs oracles

----------------------------------------------------------------

