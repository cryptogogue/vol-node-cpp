{
    "name": "TEST_SCHEMA",
    "lua": "\nfunction main ( ledger, caller )\n    print ( 'publish schema', caller )\n    awardAsset ( ledger, caller, 'pack', 1000 )\nend\n",
    "definitions": {
        "pack": {
            "fields": {
                "displayName": {
                    "type": "STRING",
                    "value": "Booster Pack",
                    "mutable": false
                }
            }
        },
        "common": {
            "fields": {
                "displayName": {
                    "type": "STRING",
                    "value": "Common",
                    "mutable": false
                },
                "keywords": {
                    "type": "STRING",
                    "value": "card common",
                    "mutable": false
                }
            }
        },
        "rare": {
            "fields": {
                "displayName": {
                    "type": "STRING",
                    "value": "Rare",
                    "mutable": false
                },
                "keywords": {
                    "type": "STRING",
                    "value": "card rare",
                    "mutable": false
                }
            }
        },
        "ulraRare": {
            "fields": {
                "displayName": {
                    "type": "STRING",
                    "value": "Ultra-Rare",
                    "mutable": false
                },
                "keywords": {
                    "type": "STRING",
                    "value": "card ultra-rare",
                    "mutable": false
                }
            }
        }
    },
    "methods": {
        "makeRare": {
            "weight": 1,
            "maturity": 0,
            "description": "Combine two commons to make a rare.",
            "assetArgs": {
                "common0": {
                    "op": "ASSET_TYPE",
                    "value": "common"
                },
                "common1": {
                    "op": "ASSET_TYPE",
                    "value": "common"
                }
            },
            "constArgs": {},
            "constraints": [],
            "lua": "\nfunction main ( ledger, caller, assetArgs, constArgs )\n    print ( 'makeRare', caller )\nend\n"
        },
        "makeUltraRare": {
            "weight": 1,
            "maturity": 0,
            "description": "Combine two rares to make an ultra-rare.",
            "assetArgs": {
                "rare0": {
                    "op": "ASSET_TYPE",
                    "value": "rare"
                },
                "rare1": {
                    "op": "ASSET_TYPE",
                    "value": "rare"
                }
            },
            "constArgs": {},
            "constraints": [],
            "lua": "\nfunction main ( ledger, caller, assetArgs, constArgs )\n    print ( 'makeUltraRare', caller )\nend\n"
        },
        "openPack": {
            "weight": 1,
            "maturity": 0,
            "description": "Open a booster pack.",
            "assetArgs": {
                "pack": {
                    "op": "ASSET_TYPE",
                    "value": "pack"
                }
            },
            "constArgs": {},
            "constraints": [],
            "lua": "\nfunction main ( ledger, caller, assetArgs, constArgs )\n    print ( 'openPack', caller )\n    for arg, asset in pairs ( assetArgs ) do\n        print ( 'ARG:', arg )\n        print ( 'OWNER', asset.owner )\n        print ( 'TYPE', asset.type )\n        for name, field in pairs ( asset.fields ) do\n            print ( '   FIELD', name, field )\n        end\n    end\nend\n"
        }
    }
}