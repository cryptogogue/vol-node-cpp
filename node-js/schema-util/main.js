/* eslint-disable no-whitespace-before-property */

import fs                       from 'fs';
import { buildSchema, op }      from '../wallet/src/Schema/SchemaBuilder';
import { JUSTIFY }              from '../wallet/src/util/textLayout';
import * as util                from './util'

//     //----------------------------------------------------------------//
//     .definition ( 'pack' )
//         .field ( 'layout', 'pack' )
//         .field ( 'displayName', 'Pack' )
//             .alternate ( 'ES', 'El Pack' )
//             .alternate ( 'FR', 'Le Pack' )

//     .definition ( 'common' )
//         .field ( 'layout', 'card' )
//         .field ( 'displayName', 'Common' )
//             .alternate ( 'ES', 'El Common' )
//             .alternate ( 'FR', 'Le Common' )
//         .field ( 'image', 'https://i.imgur.com/VMPKVAN.jpg' )
//         .field ( 'keywords', 'card common' )

//     .definition ( 'rare' )
//         .field ( 'layout', 'card' )
//         .field ( 'displayName', 'Rare' )
//             .alternate ( 'ES', 'El Rare' )
//             .alternate ( 'FR', 'Le Rare' )
//         .field ( 'image', 'https://i.imgur.com/BtKggd4.jpg' )
//         .field ( 'keywords', 'card rare' )

//     .definition ( 'ultraRare' )
//         .field ( 'layout', 'card' )
//         .field ( 'displayName', 'Ultra-Rare' )
//             .alternate ( 'ES', 'El Ultra-Rare' )
//             .alternate ( 'FR', 'Le Ultra-Rare' )
//         .field ( 'image', 'https://i.imgur.com/2aiJ3cq.jpg' )
//         .field ( 'keywords', 'card ultra-rare' )

//     //----------------------------------------------------------------//
//     .method ( 'makeRare', 'Combine two commons to make a rare.' )
//         .assetArg ( 'common0', op.ASSET_TYPE ( 'common' ))
//         .assetArg ( 'common1', op.ASSET_TYPE ( 'common' ))
//         .luaFile ( 'lua/makeRare.lua' )

//     .method ( 'makeUltraRare', 'Combine two rares to make an ultra-rare.' )
//         .assetArg ( 'rare0', op.ASSET_TYPE ( 'rare' ))
//         .assetArg ( 'rare1', op.ASSET_TYPE ( 'rare' ))
//         .luaFile ( 'lua/makeUltraRare.lua' )

//     .method ( 'openPack', 'Open a booster pack.' )
//         .assetArg ( 'pack', op.ASSET_TYPE ( 'pack' ))
//         .luaFile ( 'lua/openPack.lua' )
//     ;

//================================================================//
// schema
//================================================================//
let schemaBuilder = buildSchema ( 'TEST_SCHEMA' )
    .luaFile ( 'lua/publish.lua' )

    //----------------------------------------------------------------//
    .font ( 'roboto', 'http://localhost:3000/fonts/roboto/roboto-regular.ttf' )
        .bold ( 'http://localhost:3000/fonts/roboto/roboto-bold.ttf' )
        .italic ( 'http://localhost:3000/fonts/roboto/roboto-regularitalic.ttf' )
        .boldItalic ( 'http://localhost:3000/fonts/roboto/roboto-bolditalic.ttf' )
    //----------------------------------------------------------------//
    .icon ( 'circle', 256, 256,
        `<circle cx = '128' cy = '128' r = '128'/>`
    )

    //----------------------------------------------------------------//
    .icon ( 'triangle', 1, 1,
        `<polygon points = '0,1 1,1 0.5,0'/>`
    )

    //----------------------------------------------------------------//
    .icon ( 'EN', 650, 450,
		`<svg x="10px" y="-50px">
        <ellipse fill="#CCCCCC" cx="325" cy="325" rx="319.5" ry="314.945"/>
		<path d="M234.468,179.163c19.479-12.986,40.254-20.777,62.33-25.971v-32.463c0-7.792,6.492-14.284,14.283-14.284h38.957
		c7.79,0,14.283,6.492,14.283,14.284v32.463c22.074,3.895,42.851,12.985,62.329,25.971l23.373-22.076
		c5.195-5.194,14.285-5.194,19.478,0l27.271,27.269c5.191,5.195,5.191,14.284,0,19.479l-24.673,23.374
		c12.985,19.477,20.777,40.254,25.97,62.329h32.464c7.792,0,14.283,6.491,14.283,14.284v38.955c0,7.791-6.491,14.285-14.283,14.285
		h-32.464c-3.896,22.073-12.983,42.851-25.97,62.328l22.074,23.374c5.193,5.192,5.193,14.284,0,19.479l-27.27,27.27
		c-5.193,5.191-14.284,5.191-19.477,0l-23.376-24.674c-19.478,12.985-40.254,20.778-62.329,25.97v32.466
		c0,7.792-6.491,14.282-14.281,14.282h-38.958c-7.791,0-14.284-6.49-14.284-14.282V490.81c-22.074-3.895-42.851-12.983-62.33-25.97
		l-23.373,22.075c-5.193,5.194-14.285,5.194-19.479,0l-27.27-27.27c-5.194-5.193-5.194-14.283,0-19.479l23.373-22.074
		c-12.983-19.479-20.775-40.255-25.97-62.33h-32.464c-7.791,0-14.284-6.493-14.284-14.282v-38.957
		c0-7.791,6.493-14.283,14.284-14.283h32.464c3.896-22.075,12.986-42.851,25.97-62.33l-22.074-23.373
		c-5.194-5.195-5.194-14.285,0-19.479l27.27-27.269c5.193-5.195,14.283-5.195,19.477,0L234.468,179.163z M259.575,251.361
		c-38.58,38.581-38.58,101.592-1.287,140.17c38.58,38.58,101.591,38.58,140.171,1.287c38.579-38.58,38.579-101.592,1.286-140.17
		C361.166,214.068,298.153,212.783,259.575,251.361z M385,205.165c-1.623,0-2.436,0-4.058,0h-12.98v-64.097
		c0-24.341,20.282-44.624,44.625-44.624h13.793c4.057-14.605,17.038-25.964,33.266-25.964c18.661,0,34.077,15.417,34.077,34.077
		c0,18.662-15.416,34.077-34.077,34.077c-16.228,0-29.209-11.359-33.266-25.963h-13.793c-15.416,0-28.397,12.982-28.397,28.397
		v64.097H385z M442.606,103.745c0,9.736,8.113,17.85,17.851,17.85c9.736,0,17.851-8.114,17.851-17.85
		c0-9.737-8.113-17.85-17.851-17.85C450.72,85.896,442.606,94.008,442.606,103.745z M289.261,140.256v64.097h-10.547
		c-1.623,0-4.057,0-5.68,0.812v-64.908c0-15.416-12.981-28.397-28.397-28.397h-13.793c-4.056,14.604-17.038,25.963-33.267,25.963
		c-18.66,0-34.076-15.416-34.076-34.077s15.416-34.077,34.076-34.077c16.229,0,29.209,11.359,33.267,25.963h13.793
		C268.976,95.631,289.261,115.915,289.261,140.256z M215.427,103.745c0-9.737-8.113-17.85-17.85-17.85s-17.851,8.113-17.851,17.85
		c0,9.736,8.114,17.85,17.851,17.85S215.427,113.481,215.427,103.745z M276.278,439.647h12.981v64.097
		c0,24.341-20.284,44.625-44.625,44.625h-13.793c-4.056,14.604-17.038,25.963-33.267,25.963c-18.66,0-34.076-15.416-34.076-34.077
		s15.416-34.077,34.076-34.077c16.229,0,29.209,11.359,33.267,25.964h13.793c15.416,0,28.397-12.981,28.397-28.396v-64.909
		C273.845,439.647,275.467,439.647,276.278,439.647z M215.427,540.255c0-9.736-8.113-17.85-17.85-17.85s-17.851,8.112-17.851,17.85
		s8.114,17.851,17.851,17.851C207.313,558.104,215.427,549.991,215.427,540.255z M494.533,540.255
		c0,18.661-15.416,34.077-34.076,34.077c-16.228,0-29.208-11.359-33.267-25.963h-13.792c-24.341,0-44.625-20.284-44.625-44.625
		v-64.097h10.548c1.622,0,4.057,0,5.681-0.813v64.909c0,15.415,12.979,28.396,28.396,28.396h13.792
		c4.059-14.604,17.039-25.964,33.267-25.964C479.117,506.178,494.533,520.783,494.533,540.255z M478.307,540.255
		c0-9.736-8.113-17.85-17.851-17.85c-9.736,0-17.851,8.112-17.851,17.85s8.113,17.851,17.851,17.851
		C470.193,558.104,478.307,549.991,478.307,540.255z M211.37,282.244h-64.098c-24.341,0-44.625-20.284-44.625-44.625v-13.793
		c-14.604-4.057-25.963-17.039-25.963-33.266c0-18.661,15.416-34.077,34.077-34.077s34.077,15.416,34.077,34.077
		c0,16.228-11.359,29.209-25.963,33.266v13.793c0,15.416,12.98,28.396,28.396,28.396h64.908c0,1.623,0,2.435,0,4.058v12.17
		L211.37,282.244L211.37,282.244z M128.612,190.56c0-9.736-8.115-17.85-17.851-17.85c-9.737,0-17.851,8.113-17.851,17.85
		s8.113,17.85,17.851,17.85C120.497,208.41,128.612,200.297,128.612,190.56z M118.876,406.381v13.793
		c14.604,4.059,25.963,17.039,25.963,33.267c0,18.66-15.416,34.076-34.077,34.076s-34.077-15.416-34.077-34.076
		c0-16.228,11.359-29.208,25.963-33.266v-13.794c0-24.34,20.284-44.624,44.625-44.624h64.098v10.548c0,1.622,0,4.057,0.811,5.68
		h-64.908C131.856,377.984,118.876,390.965,118.876,406.381z M110.762,435.59c-9.737,0-17.851,8.113-17.851,17.851
		c0,9.736,8.113,17.851,17.851,17.851c9.735,0,17.851-8.113,17.851-17.851S120.497,435.59,110.762,435.59z M581.349,453.439
		c0,18.66-15.416,34.076-34.077,34.076s-34.077-15.416-34.077-34.076c0-16.228,11.359-29.208,25.964-33.267V406.38
		c0-15.416-12.981-28.397-28.396-28.397h-64.909c0-1.623,0-2.434,0-4.057v-12.98h64.097c24.343,0,44.625,20.283,44.625,44.625
		v13.792C569.989,423.42,581.349,437.213,581.349,453.439z M565.12,453.439c0-9.736-8.112-17.851-17.85-17.851
		s-17.85,8.113-17.85,17.851c0,9.736,8.112,17.851,17.85,17.851S565.12,463.177,565.12,453.439z M581.349,190.56
		c0,16.228-11.359,29.209-25.963,33.266v13.793c0,24.34-20.284,44.625-44.625,44.625h-64.098v-10.547c0-1.623,0-4.057-0.813-5.68
		h64.909c15.415,0,28.396-12.982,28.396-28.397v-13.793c-14.604-4.057-25.964-17.039-25.964-33.266
		c0-18.661,15.416-34.077,34.077-34.077S581.349,171.899,581.349,190.56z M565.12,190.56c0-9.736-8.112-17.85-17.85-17.85
		s-17.85,8.113-17.85,17.85s8.112,17.85,17.85,17.85S565.12,200.297,565.12,190.56z"/>
		</svg>`)
		
    .icon ( 'DEP', 650, 450,
		`<svg x="10px" y="-50px">
	<ellipse fill="#CCCCCC" cx="325" cy="325" rx="319.5" ry="314.945"/>
	<path d="M287.639,361.092l197.704,128.756c27.157,21.472,39.747-0.785,46.771-6.739c14.388-12.199,27.898-41.581,36.528-58.411
		l13.691-40.103c13.646-62.078,5.195-108.403,5.195-108.403C550.5,86.5,371.23,20.716,247.565,65.062
		c-11.343,4.068-19.038,18.833-16.845,30.042c2.192,11.208,17.939,24.282,29.28,20.371C387.5,71.5,460.566,189.5,461.053,289.558
		l-162.347,36.946c-7.817,1.719-13.834,7.43-16.557,14.359c-1.406,3.232-1.256,6.609-0.526,10.347
		C282.847,354.839,284.554,358.36,287.639,361.092z"/>
	<path d="M382.47,549.407c-5.722,1.826-10.125,6.507-11.585,12.379c-0.776,3.133-0.794,6.466,0.047,9.608
		c3,9.139,12.207,14.486,21.458,11.504c7.056-2.311,13.831-5.114,20.226-8.015c8.686-3.971,12.072-14.341,8.214-23.286
		c-3.856-8.944-13.931-12.437-22.616-8.468C393.534,545.65,388.097,547.97,382.47,549.407z"/>
	<path d="M109.609,265.257c2.387-9.204,5.302-17.701,8.826-26.113c5.438-13.871-0.589-29.949-14.097-35.613
		c-13.509-5.666-29.108,0.457-34.547,14.326c-4.443,10.829-8.276,21.74-10.896,32.82c-0.156,1.25-0.313,2.499-0.468,3.748
		c-1.639,13.123,6.602,26.324,19.128,29.948C91.298,288.166,105.915,280,109.609,265.257z"/>
	<path d="M187.472,157.32c13.125-11.429,15.118-31.183,4.688-44.604c-11.14-13.527-30.344-15.623-43.366-4.923
		c-10.599,8.83-19.785,17.868-29.067,27.634c-4.341,5.299-7.262,10.808-8.161,17.359c-1.4,10.187,1.546,20.277,9.237,27.354
		c12.044,12.175,31.649,11.36,43.457-1.005C171.729,172.072,179.295,164.281,187.472,157.32z"/>
	<path d="M104.577,374.029c-0.959-8.902-1.348-17.657-1.036-26.856c0.254-14.162-10.801-26.238-24.548-26.619
		c-11.907-0.541-22.29,7.966-24.981,19.654c-0.405,1.754-0.808,3.507-0.644,5.405c-0.148,11.096,0.274,22.333,1.26,33.717
		c1.451,14.594,14.181,24.617,27.766,23.105C96.544,401.069,106.162,388.04,104.577,374.029z"/>
	<path d="M304.734,598.127c11.311,0.221,20.979-9.107,21.779-20.604c0.332-11.608-8.659-21.437-19.855-22.138
		c-6.881-0.159-14.112-0.908-21.226-2.142c-10.967-1.663-21.103,5.519-23.653,16.079c-0.115,0.479-0.232,0.96-0.348,1.44
		c-1.848,11.746,5.396,22.67,16.825,24.447C286.772,596.785,295.985,597.512,304.734,598.127z"/>
	<path d="M225.2,558.453c4.375-11.482-0.719-24.688-11.902-29.242c-6.782-2.952-13.509-6.422-20.177-10.405
		c-10.501-6.038-23.639-2.469-29.962,8.241c-1.359,2.97-2.16,5.485-2.516,8.582c-1.008,8.766,3.056,17.654,10.666,22.279
		c8.112,4.691,16.786,8.931,25.018,12.591C207.507,575.053,220.321,569.87,225.2,558.453z"/>
	<path d="M142.069,469.432c-5.151-6.409-9.692-13.29-13.694-20.088c-6.695-11.149-20.97-14.981-32.305-8.231
		c-6.049,4.163-10.177,10.304-11.083,16.928c-0.755,5.521,0.178,10.73,3.332,15.715c5.386,8.696,11.311,17.476,17.387,25.148
		c7.921,10.202,23.033,11.911,32.909,3.811C148.415,495.176,149.915,480.187,142.069,469.432z"/>
		</svg>`)		
		
	 .icon ( 'E', 650, 450,
		`<svg x="10px" y="-50px">
		<ellipse fill="#66CCFF" cx="325" cy="325" rx="319.5" ry="314.945"/>
		<path d="M334.605,47.65c-7.941-1.72-10.59-1.72-19.214,0C141.921,82.476,59.415,200.545,59.415,330.814
		c0,147.205,112.489,201.379,255.979,269.135c5.343,4.92,13.87,4.92,19.214,0c139.854-67.756,255.979-127.088,255.979-269.135
		C590.584,200.545,501.717,80.755,334.605,47.65z M324.999,522.561c-121.044,0-219.58-88.043-219.58-197.168
		c0-106.74,102.315-231.581,219.58-231.581c123.806,0,224.72,141.347,224.72,231.581
		C549.719,420.023,444.863,522.561,324.999,522.561z"/>
		<path d="M304.281,206.386c-9.084,9.464-13.623,21.895-13.623,37.297c0,20.478,3.7,35.544,11.101,45.198
		c7.4,9.651,21.97,14.48,43.715,14.48h8.986v29.25h-15.836c-18.277,0-31.98,4.387-41.113,13.164
		c-9.14,8.775-13.705,21.455-13.705,38.027c0,17.553,5.755,31.156,17.268,40.809c11.51,9.656,38.218,16.744,57.568,10.406
		c34.628-11.342,58.93-25.336,82.577-43.002c63.083-52,77.544-126.673,63.16-190.691l8.185,3.583
		c38.063,120.94-33.16,190.677-41.561,201.108c-16.269,14.922-27.021,21.813-52.569,40c-12.246,8.189-40.296,20.379-53.817,24.668
		c-13.522,4.287-28.007,9.141-48.47,9.141c-17.36,0-35.077-3.654-51.249-6.973c-16.17-3.313-29.33-9.574-41.389-16.793
		c-11.88-7.023-21.377-16.039-28.503-27.059c-7.126-11.018-10.689-24.033-10.689-39.055c0-23.01,6.895-40.607,20.693-52.799
		c13.795-12.186,31.288-18.871,52.486-20.041v-2.923c-22.111-4.29-38.554-11.894-49.334-22.82
		c-10.785-10.919-16.171-26.325-16.171-46.218c0-13.063,3.468-24.23,10.415-33.493c6.941-9.263,46.349-69.476,127.306-69.476
		c61.234,0,68.598,13.31,93.584,38.974c15.898,17.586,22.489,36.596,22.489,60.191c0,13.262-3.779,24.036-11.338,32.324
		c-7.567,8.292-18.811,12.437-33.749,12.437c-12.754,0-14.417-3.365-23.16-10.096c-3.938-4.258-6.907-12.526-4.217-23.085
		C391.462,181.757,336.527,178.3,304.281,206.386z"/>
		</svg>`)
		
    .icon ( 'G', 650, 450,
		`<svg x="10px" y="-50px">	
		<ellipse fill="#FFFF00" cx="325" cy="325" rx="319.5" ry="314.945"/>
	<path d="M334.605,47.65c-7.941-1.72-10.592-1.72-19.216,0C141.921,82.476,59.415,200.545,59.415,330.814
		c0,147.203,112.489,201.379,255.979,269.135c5.345,4.92,13.87,4.92,19.216,0c139.854-67.756,255.979-127.088,255.979-269.135
		C590.584,200.545,501.717,80.755,334.605,47.65z M324.999,522.561c-121.044,0-219.58-88.043-219.58-197.167
		c0-106.74,102.315-231.581,219.58-231.581c123.806,0,224.72,141.347,224.72,231.581
		C549.719,420.023,444.863,522.561,324.999,522.561z"/>
	<path d="M521.369,229.572c-31.869-51.072-35.242-34.926-47.551-25.523c-8.203,6.172-25.304,31.008-51.745,61.439l-47.565,57.383
		l45.537,58.727c8.848,12.629,13.281,25.683,13.281,39.151c0,34.104-38.357,61.15-105.055,61.15
		c-43.82,0-82.728-20.191-82.728-46.57c0-5.613-4.045-25.83,14.536-46.789l28.487-35.308L244.5,301.5
		c-7.989-12.348-35.378-44.691-57.486-72.811C157.5,199.5,132.5,210.5,117.881,254.631L107.5,195.5l118-101l20-5l33.732,10.595
		C233.5,113.5,216.5,124.5,222.717,144.297c1.304,4.151,46.302,45.411,59.688,65.477l61.122,77.731l33.196-42.974
		C414.5,192.5,414.5,192.5,431.688,169.359c23.813-37.859-4.335-44.36-48.188-70.859c-19-24.878,41.674-16.893,26.346-16.893
		L437.5,89.5l63,49l22,38L521.369,229.572z M361.99,424.221c0-4.631-6.619-16.332-9.857-21.104l-24.722-24.309l-23.133,29.309
		c-3.027,5.053-3.529,10.684-3.529,14.895c0,13.896,8.527,20.842,25.58,20.842C341.428,443.85,361.99,437.973,361.99,424.221z"/>`)


    .icon ( 'B', 650, 450,
		`<svg x="10px" y="-50px">
		<ellipse fill="#ff6666" cx="325" cy="325" rx="319.5" ry="314.945"/>
		<path d="M334.605,47.65c-7.941-1.72-10.592-1.72-19.216,0C141.921,82.476,59.415,200.545,59.415,330.814
		c0,147.203,112.489,201.379,255.979,269.135c5.345,4.92,13.87,4.92,19.216,0c139.854-67.756,255.979-127.088,255.979-269.135
		C590.584,200.545,501.717,80.755,334.605,47.65z M324.999,522.561c-121.044,0-219.58-88.043-219.58-197.167
		c0-106.74,102.315-231.581,219.58-231.581c123.806,0,224.72,141.347,224.72,231.581
		C549.719,420.023,444.863,522.561,324.999,522.561z"/>
		<path d="M279.832,422.961l1.161,106.539l-89.797-42.975l26.011-240.519c0-25.031,9.404-45.114,28.216-60.25
		c18.81-15.133,44.042-22.706,75.7-22.706c29.21,0,52.724,6.197,70.538,18.594c17.813,12.401,26.727,28.069,26.727,47.021
		c0,18.838-12.313,35.16-36.936,48.988c51.386,12.051,77.077,36.749,77.077,74.102c0,27.443-10.464,49.453-31.389,66.041
		c-20.921,16.585-48.186,24.877-81.788,24.877C318.017,442.672,296.174,436.102,279.832,422.961z M308.735,309.655v-41.3
		c31.503-3.688,47.254-15.078,47.254-34.148c0-7.747-2.931-14.094-8.806-19.041c-5.871-4.942-13.762-7.42-23.672-7.42
		c-29.121,0-43.681,15.818-43.681,47.438v96.305c0,14.303,4.995,25.628,14.994,33.969c9.997,8.342,24.229,12.514,42.699,12.514
		c17.251,0,31.322-3.755,42.244-11.286c10.909-7.518,16.367-17.432,16.367-29.734c0-31.527-28.598-47.294-85.798-47.294
		L308.735,309.655L308.735,309.655L308.735,309.655z"/>
		</svg>`)
		
	.icon ( 'D', 650, 450,
		`<svg x="10px" y="-50px">
		<ellipse fill="#66cc66" cx="325" cy="325" rx="319.5" ry="314.945"/>
		<path d="M334.605,47.65c-7.941-1.72-10.592-1.72-19.216,0C141.921,82.476,59.415,200.545,59.415,330.814
		c0,147.203,112.489,201.379,255.979,269.135c5.345,4.92,13.87,4.92,19.216,0c139.854-67.756,255.979-127.088,255.979-269.135
		C590.584,200.545,501.717,80.755,334.605,47.65z M324.999,522.561c-121.044,0-219.58-88.043-219.58-197.167
		c0-106.74,102.315-231.581,219.58-231.581c123.806,0,224.72,141.347,224.72,231.581
		C549.719,420.023,444.863,522.561,324.999,522.561z"/>
		<path d="M317.438,93.861l16.284-0.757L469.987,468.5H173.109L317.438,93.861z M367.621,417.461L308.25,268.739l-63.03,148.722
		H367.621z"/>
		</svg>`)
		
	.icon ( 'T', 650, 450,
		`<svg x="10px" y="-50px">
		<ellipse fill="#cc66ff" cx="325" cy="325" rx="319.5" ry="314.945"/>
		<path d="M334.605,47.65c-7.941-1.72-10.592-1.72-19.216,0C141.921,82.476,59.415,200.545,59.415,330.814
		c0,147.203,112.489,201.379,255.979,269.135c5.345,4.92,13.87,4.92,19.216,0c139.854-67.756,255.979-127.088,255.979-269.135
		C590.584,200.545,501.717,80.755,334.605,47.65z M324.999,522.561c-121.044,0-219.58-88.043-219.58-197.167
		c0-106.74,102.315-231.581,219.58-231.581c123.806,0,224.72,141.347,224.72,231.581
		C549.719,420.023,444.863,522.561,324.999,522.561z"/>
		<path d="M325.896,149.161c47.309,0,85.85,15.26,115.622,45.779c29.771,30.519,44.658,67.791,44.658,111.817
		c0,44.025-14.553,81.67-43.649,112.938c-29.103,31.265-68.054,46.896-116.854,46.896c-33.281,0-62.124-7.127-86.522-21.379
		c-24.399-14.252-43.058-33.653-55.964-58.202c-12.909-24.55-19.364-51.226-19.364-80.029c0-31.338,7.275-58.91,21.826-82.714
		c14.551-23.804,34.102-42.271,58.65-55.405C268.847,155.727,296.046,149.161,325.896,149.161z M325.674,166.173
		c-25.375,0-45.219,11.791-59.547,35.37s-21.49,59.396-21.49,107.452c0,44.921,6.828,79.618,20.482,104.093
		c13.656,24.479,33.69,36.712,60.104,36.712c25.218,0,44.884-11.563,58.985-34.696c14.104-23.133,21.154-57.902,21.154-104.315
		C405.367,214.377,378.803,166.173,325.674,166.173z M286.274,365.631h-8.506V254.148h8.506c0,10.746,2.649,18.281,7.946,22.609
		c5.296,4.329,15.56,6.492,30.781,6.492c15.071,0,25.329-2.163,30.78-6.492c5.446-4.328,8.17-11.863,8.17-22.609h8.283V365.63
		h-8.283c0-19.7-11.563-29.549-34.695-29.549c-13.733,0-23.023,0.782-27.872,2.351c-4.851,1.565-8.584,4.7-11.192,9.401
		C287.58,352.534,286.274,358.466,286.274,365.631z"/>
		`)
		
	.icon ( 'A', 650, 450,
		`<svg x="10px" y="-50px">
		<ellipse cx="325" cy="325" rx="319.5" ry="314.945"/>
		<path fill="#FFFFFF" d="M334.605,47.65c-7.941-1.72-10.592-1.72-19.216,0C141.921,82.476,59.415,200.545,59.415,330.814
		c0,147.203,112.489,201.379,255.979,269.135c5.345,4.92,13.87,4.92,19.216,0c139.854-67.756,255.979-127.088,255.979-269.135
		C590.584,200.545,501.717,80.755,334.605,47.65z M324.999,522.561c-121.044,0-219.58-88.043-219.58-197.167
		c0-106.74,102.315-231.581,219.58-231.581c123.806,0,224.72,141.347,224.72,231.581
		C549.719,420.023,444.863,522.561,324.999,522.561z"/>
		<path fill="#FFFFFF" d="M494.927,154.326c-100.021,40.245-58.984,137.025-55.929,203.596
		c2.663,57.996,100.888,40.581,118.454,41.098L543.458,439c-3.101,1.55-104.787,10.649-109.951,10.649
		c-22.214,0-40.299-14.467-42.881-52.695h-1.551c-16.531,29.964-45.46,52.695-85.24,52.695
		c-59.411,0-102.288-49.597-102.288-125.538c0-81.625,53.727-135.869,111.589-135.869c36.161,0,63.54,18.599,76.974,50.111h2.066
		c1.032-19.631,20.484-99.418,85.896-102.658L494.927,154.326z M318.263,392.544c27.442,0,48.354-17.849,55.104-46.64
		c2.248-9.896,14.142-14.813,14.142-26.958c0-8.547-11.441-19.376-13.242-27.024c-5.397-29.241-26.323-45.857-55.114-45.857
		c-36.889,0-62.749,26.514-62.749,75.998C256.402,363.45,280.474,392.544,318.263,392.544z"/>
		</svg>`)		
		
		
		
	.icon ( 'O', 650, 450,
		`<svg x="10px" y="-50px">
		<ellipse fill="#CCCCCC" cx="325" cy="325" rx="319.5" ry="314.945"/>
		<path d="M334.605,47.65c-7.941-1.72-10.592-1.72-19.216,0C141.921,82.476,59.415,200.545,59.415,330.814
		c0,147.203,112.489,201.379,255.979,269.135c5.345,4.92,13.87,4.92,19.216,0c139.854-67.756,255.979-127.088,255.979-269.135
		C590.584,200.545,501.717,80.755,334.605,47.65z M324.999,522.561c-121.044,0-219.58-88.043-219.58-197.167
		c0-106.74,102.315-231.581,219.58-231.581c123.806,0,224.72,141.347,224.72,231.581
		C549.719,420.023,444.863,522.561,324.999,522.561z"/>
		</svg>`)
		
	.icon ( 'logo', 650, 450,
		`<svg x="10px" y="-50px">
		<path fill="#4899C3" stroke="#D62121" stroke-width="11" stroke-miterlimit="10" d="M212.749,155.406c23.117-15.415,47.789-24.66,74.004-30.83V86.03
		c0-9.256,7.701-16.957,16.958-16.957h46.259c9.243,0,16.957,7.701,16.957,16.957v38.546c26.203,4.627,50.863,15.415,74.004,30.83
		l27.745-26.203c6.171-6.17,16.958-6.17,23.13,0l32.373,32.375c6.171,6.171,6.171,16.957,0,23.129l-29.287,27.745
		c15.415,23.129,24.659,47.788,30.829,74.003h38.534c9.256,0,16.969,7.702,16.969,16.958v46.259c0,9.246-7.713,16.959-16.969,16.959
		h-38.534c-4.627,26.213-15.414,50.873-30.829,74.004l26.202,27.744c6.17,6.172,6.17,16.971,0,23.129l-32.374,32.387
		c-6.171,6.158-16.971,6.158-23.129,0l-27.745-29.301c-23.13,15.416-47.801,24.672-74.004,30.844v38.531
		c0,9.256-7.713,16.971-16.958,16.971h-46.258c-9.245,0-16.959-7.715-16.959-16.971v-38.531
		c-26.202-4.631-50.874-15.428-74.003-30.844l-27.745,26.213c-6.171,6.172-16.959,6.172-23.129,0l-32.374-32.371
		c-6.172-6.172-6.172-16.971,0-23.131l27.745-26.215c-15.415-23.127-24.66-47.801-30.843-74.002H84.774
		c-9.245,0-16.959-7.701-16.959-16.957v-46.248c0-9.257,7.714-16.958,16.959-16.958h38.544
		c4.628-26.215,15.415-50.887,30.843-74.004l-26.215-27.757c-6.158-6.159-6.158-16.958,0-23.117l32.386-32.386
		c6.159-6.158,16.958-6.158,23.117,0L212.749,155.406z M242.56,241.132c-45.809,45.797-45.809,120.614-1.53,166.425
		c45.809,45.795,120.627,45.795,166.422,1.529c45.797-45.809,45.797-120.626,1.53-166.423
		C363.174,196.854,288.356,195.323,242.56,241.132z M391.477,186.273c-1.93,0-2.891,0-4.821,0h-15.403v-76.093
		c0-28.899,24.076-52.988,52.976-52.988h16.376c4.821-17.335,20.226-30.831,39.504-30.831c22.156,0,40.452,18.307,40.452,40.464
		c0,22.146-18.296,40.451-40.452,40.451c-19.278,0-34.683-13.483-39.504-30.829h-16.376c-18.294,0-33.71,15.415-33.71,33.722v76.093
		h0.959V186.273z M459.869,65.866c0,11.552,9.634,21.186,21.197,21.186c11.554,0,21.197-9.634,21.197-21.186
		c0-11.565-9.634-21.198-21.197-21.198S459.869,54.301,459.869,65.866z M277.8,109.221v76.093h-12.512c-1.932,0-4.823,0-6.742,0.972
		v-77.064c0-18.307-15.428-33.722-33.722-33.722h-16.375c-4.811,17.347-20.227,30.831-39.492,30.831
		c-22.157,0-40.464-18.307-40.464-40.464c0-22.146,18.307-40.452,40.464-40.452c19.266,0,34.682,13.484,39.492,30.819h16.375
		C253.724,56.233,277.8,80.31,277.8,109.221z M190.143,65.866c0-11.565-9.634-21.198-21.197-21.198
		c-11.565,0-21.198,9.633-21.198,21.198c0,11.552,9.633,21.186,21.198,21.186C180.509,87.052,190.143,77.418,190.143,65.866z
		 M262.396,464.674H277.8v76.105c0,28.898-24.076,52.988-52.976,52.988h-16.388c-4.811,17.336-20.226,30.818-39.491,30.818
		c-22.157,0-40.452-18.295-40.452-40.451c0-22.158,18.295-40.465,40.452-40.465c19.266,0,34.681,13.484,39.491,30.83h16.388
		c18.294,0,33.71-15.414,33.71-33.709v-77.076C259.494,464.674,261.425,464.674,262.396,464.674z M190.143,584.123
		c0-11.566-9.634-21.188-21.197-21.188c-11.565,0-21.198,9.621-21.198,21.188c0,11.564,9.633,21.197,21.198,21.197
		C180.509,605.32,190.143,595.688,190.143,584.123z M521.519,584.123c0,22.156-18.307,40.463-40.465,40.463
		c-19.266,0-34.669-13.482-39.491-30.83h-16.375c-28.899,0-52.988-24.078-52.988-52.977v-76.105h12.525c1.919,0,4.81,0,6.741-0.959
		v77.064c0,18.295,15.415,33.711,33.709,33.711h16.376c4.822-17.336,20.225-30.832,39.503-30.832
		C503.212,543.67,521.519,561.004,521.519,584.123z M502.251,584.123c0-11.566-9.631-21.188-21.197-21.188
		c-11.551,0-21.185,9.621-21.185,21.188c0,11.564,9.634,21.197,21.185,21.197C492.62,605.32,502.251,595.688,502.251,584.123z
		 M185.319,277.794h-76.093c-28.898,0-52.987-24.089-52.987-52.988v-16.374c-17.348-4.812-30.831-20.239-30.831-39.505
		c0-22.157,18.306-40.452,40.464-40.452c22.157,0,40.451,18.295,40.451,40.452c0,19.266-13.483,34.681-30.83,39.505v16.374
		c0,18.307,15.415,33.722,33.722,33.722h77.064c0,1.92,0,2.892,0,4.812v14.443L185.319,277.794L185.319,277.794z M87.069,168.938
		c0-11.564-9.633-21.197-21.197-21.197c-11.553,0-21.186,9.633-21.186,21.197s9.633,21.187,21.186,21.187
		C77.437,190.125,87.069,180.503,87.069,168.938z M75.505,425.182v16.375c17.335,4.822,30.831,20.227,30.831,39.492
		c0,22.158-18.307,40.451-40.464,40.451c-22.146,0-40.451-18.293-40.451-40.451c0-19.266,13.483-34.67,30.818-39.492v-16.375
		c0-28.898,24.089-52.988,52.987-52.988h76.105v12.525c0,1.918,0,4.811,0.96,6.74h-77.065
		C90.92,391.471,75.505,406.875,75.505,425.182z M65.872,459.863c-11.553,0-21.186,9.621-21.186,21.186s9.633,21.197,21.186,21.197
		c11.564,0,21.186-9.633,21.186-21.197C87.069,469.484,77.437,459.863,65.872,459.863z M624.592,481.049
		c0,22.158-18.307,40.451-40.464,40.451c-22.146,0-40.452-18.293-40.452-40.451c0-19.266,13.485-34.67,30.831-39.492v-16.375
		c0-18.307-15.416-33.723-33.722-33.723H463.72c0-1.93,0-2.891,0-4.809v-15.416h76.105c28.899,0,52.987,24.088,52.987,52.988v16.363
		C611.107,445.408,624.592,461.783,624.592,481.049z M605.325,481.049c0-11.551-9.633-21.186-21.197-21.186
		c-11.553,0-21.199,9.621-21.199,21.186s9.634,21.197,21.199,21.197C595.692,502.246,605.325,492.613,605.325,481.049z
		 M624.592,168.938c0,19.267-13.484,34.682-30.831,39.493v16.387c0,28.887-24.077,52.976-52.976,52.976H464.68V265.27
		c0-1.931,0-4.81-0.96-6.742h77.065c18.306,0,33.722-15.415,33.722-33.709v-16.376c-17.346-4.81-30.831-20.226-30.831-39.491
		c0-22.157,18.307-40.464,40.452-40.464C606.285,128.475,624.592,146.781,624.592,168.938z M605.325,168.938
		c0-11.564-9.633-21.197-21.197-21.197c-11.553,0-21.199,9.633-21.199,21.197s9.634,21.187,21.199,21.187
		C595.692,190.125,605.325,180.503,605.325,168.938z"/>`)
		
		
	.icon ( 'E-Group', 650, 450,
		`<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="20px" y="-60px"
	 width="900px" height="650px" viewBox="-430.5 396.5 900 650" enable-background="new -430.5 396.5 900 650" xml:space="preserve">
<polygon fill="#66CCFF" points="-430.5,1046.5 -430.5,396.5 -180.496,408.5 2.5,478.961 32.696,399.462 469.5,401.5 219.5,433.482 
	139.5,618.5 239.5,720.499 139.5,828.5 219.5,1008.49 462.5,1041.5 32.695,1043.515 3.52,963.975 -179.5,1034.479 "/>
<g>
	<g>
		<path fill="#66CCFF" d="M74.532,420.641c-7.732,13.993-17.38,80.629-31.991,95.838C26.583,533.07,3.92,541.503-24.816,541.503
			h-37.929c-10.366-0.079-28.13-15.118-46.946-31.043c-14.003-11.867-29.887-25.3-46.959-36.5
			c-26.312-17.232-56.645-26.357-87.683-26.357c-39.091,0-77.106,14.62-107.081,41.173c-30.642,27.167-48.307-56.77-58.872-36.338
			c-3.6,6.944-2.696,198.513,10.145,233.931c7.236,19.96,7.694,48.888,0.878,66.785c-12.729,33.537-15.773,224.271-12.569,230.979
			c10.182,21.253,27.203-61.26,58.538-32.67c30.284,27.636,68.979,42.857,108.961,42.857c31.137,0,61.519-9.151,87.88-26.474
			c17.158-11.279,33.079-24.817,47.12-36.762c18.717-15.927,36.382-30.952,46.674-30.952h37.842c28.736,0,51.4,8.42,67.358,25.024
			c14.61,15.196,24.234,81.818,31.978,95.826c9.067,16.396,231.665,9.742,242.13,8.555c10.095-1.136-199.154,2.124-199.154-19.43
			c0-12.95-2.969-95.577-30.481-126.072c-41.553-46.029-111.806-46.212-135.953-46.277l-164.381-0.065
			c-41.565,0-86.322,9.765-86.322,31.226c0,20.483,37.755,31.214,75.041,31.214c23.492,0,35.281,8.002,35.281,12.493
			c0,1.749-2.251,4.935-8.573,8.146c-14.56,7.375-30.184,11.135-46.439,11.135c-59.354,0-107.637-50.951-107.637-113.586
			c0-10.064,1.262-20.078,3.748-29.713c0.717-2.78,2.177-4.66,4.614-5.952c7.286-3.877,21.797-1.984,38.807,5.039
			c25.409,10.495,48.208,11.579,48.418,11.592l1.41,0.014c3.526,0.248,7.076,0.392,10.651,0.392c3.588,0,7.126-0.157,10.268-0.379
			l263.654,19.683c2.301,0.054-50.65-18.612-28.173-41.078C17.003,762.317,205.5,743.624,205.5,720.804
			c0-21.878-188.51-40.742-202.896-54.58c-27.686-26.616,33.333-44.277,25.267-43.61l-278.933,19.684
			c-5.319,0-30.036,2.021-53.738,11.917c-16.713,6.985-31.582,8.955-38.807,5.144c-2.438-1.291-3.897-3.185-4.627-5.966
			c-2.486-9.635-3.748-19.646-3.748-29.712c0-62.634,48.283-113.585,107.637-113.585c16.181,0,31.743,3.706,46.254,11.043
			c6.285,3.174,8.511,6.293,8.511,8.016c0,1.749-2.326,4.634-7.521,7.179c-6.804,3.33-16.626,5.157-27.648,5.157
			c-37.223,0-74.904,10.719-74.904,31.213c0,21.463,44.719,31.228,86.272,31.228l201.481-0.014
			c40.081-2.978,74.273-18.954,98.878-46.239c27.538-30.56,30.506-113.213,30.506-126.176c0-21.54,209.274-16.314,199.179-17.451
			C306.185,412.876,83.6,404.244,74.532,420.641z M-33.364,704.71c27.871,0,74.52,0,85.592,2.063
			c10.849,2.021,14.436,4.568,15.476,5.574c1.064,1.017,67.942,2.545,67.942,8.432c0,7.362-67.348,9.295-68.338,10.208
			c-4.787,4.452-22.602,6.11-33.847,5.862l-286.293,0.025c-9.822-0.821-19.446-3.042-28.613-6.618
			c-4.428-1.736-88.304-4.778-88.304-8.381c0-3.641,84.209-8.902,92.313-11.684c10.663-3.629,21.797-5.481,33.091-5.481H-33.364z"/>
	</g>
	<g>
		<path fill="#1D1C1A" d="M74.532,420.641c-7.732,13.993-17.38,80.629-31.991,95.838C26.583,533.07,3.92,541.503-24.816,541.503
			h-37.929c-10.366-0.079-28.13-15.118-46.946-31.043c-14.003-11.867-29.887-25.3-46.959-36.5
			c-26.312-17.232-56.645-26.357-87.683-26.357c-39.091,0-77.106,14.62-107.081,41.173c-30.642,27.167-48.307-56.77-58.872-36.338
			c-3.6,6.944-2.696,198.513,10.145,233.931c7.236,19.96,7.694,48.888,0.878,66.785c-12.729,33.537-15.773,224.271-12.569,230.979
			c10.182,21.253,27.203-61.26,58.538-32.67c30.284,27.636,68.979,42.857,108.961,42.857c31.137,0,61.519-9.151,87.88-26.474
			c17.158-11.279,33.079-24.817,47.12-36.762c18.717-15.927,36.382-30.952,46.674-30.952h37.842c28.736,0,51.4,8.42,67.358,25.024
			c14.61,15.196,24.234,81.818,31.978,95.826c9.067,16.396,231.665,9.742,242.13,8.555c10.095-1.136-199.154,2.124-199.154-19.43
			c0-12.95-2.969-95.577-30.481-126.072c-41.553-46.029-111.806-46.212-135.953-46.277l-164.381-0.065
			c-41.565,0-86.322,9.765-86.322,31.226c0,20.483,37.755,31.214,75.041,31.214c23.492,0,35.281,8.002,35.281,12.493
			c0,1.749-2.251,4.935-8.573,8.146c-14.56,7.375-30.184,11.135-46.439,11.135c-59.354,0-107.637-50.951-107.637-113.586
			c0-10.064,1.262-20.078,3.748-29.713c0.717-2.78,2.177-4.66,4.614-5.952c7.286-3.877,21.797-1.984,38.807,5.039
			c25.409,10.495,48.208,11.579,48.418,11.592l1.41,0.014c3.526,0.248,7.076,0.392,10.651,0.392c3.588,0,7.126-0.157,10.268-0.379
			l263.654,19.683c2.301,0.054-50.65-18.612-28.173-41.078C17.003,762.317,205.5,743.624,205.5,720.804
			c0-21.878-188.51-40.742-202.896-54.58c-27.686-26.616,33.333-44.277,25.267-43.61l-278.933,19.684
			c-5.319,0-30.036,2.021-53.738,11.917c-16.713,6.985-31.582,8.955-38.807,5.144c-2.438-1.291-3.897-3.185-4.627-5.966
			c-2.486-9.635-3.748-19.646-3.748-29.712c0-62.634,48.283-113.585,107.637-113.585c16.181,0,31.743,3.706,46.254,11.043
			c6.285,3.174,8.511,6.293,8.511,8.016c0,1.749-2.326,4.634-7.521,7.179c-6.804,3.33-16.626,5.157-27.648,5.157
			c-37.223,0-74.904,10.719-74.904,31.213c0,21.463,44.719,31.228,86.272,31.228l201.481-0.014
			c40.081-2.978,74.273-18.954,98.878-46.239c27.538-30.56,30.506-113.213,30.506-126.176c0-21.54,209.274-16.314,199.179-17.451
			C306.185,412.876,83.6,404.244,74.532,420.641z M-33.364,704.71c27.871,0,74.52,0,85.592,2.063
			c10.849,2.021,14.436,4.568,15.476,5.574c1.064,1.017,67.942,2.545,67.942,8.432c0,7.362-67.348,9.295-68.338,10.208
			c-4.787,4.452-22.602,6.11-33.847,5.862l-286.293,0.025c-9.822-0.821-19.446-3.042-28.613-6.618
			c-4.428-1.736-88.304-4.778-88.304-8.381c0-3.641,84.209-8.902,92.313-11.684c10.663-3.629,21.797-5.481,33.091-5.481H-33.364z"/>
	</g>
</g>
</svg>`)			
		

		
    //----------------------------------------------------------------//
    .layout ( 'main', 750, 1050, 300, '<g>{{ $$ }}</g>' ) // the last param is an optional SVG wrapper (for transforms)
        .drawSVG (`
		    <rect x='0' y='0' width='750' height='1050' fill='#000000'/>
            <image x='-5' y='20' width='760' height='960' xlink:href='{{ image }}'/>
			//pframe
			<rect x='10' y='10' width='730' height='1030' fill-opacity='0' stroke='#000000' stroke-width='20'/>
		// rules box
			<rect x='37.5' y='585' width='675' height='375' fill='#ffffff' fill-opacity='0.85' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='5'/>
		// rarity box
			<rect x='320' y='995' width='110' height='28' fill='url(#{{ $ }}Stroke-Color)' fill-opacity='0.25' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='2'/>
        		`)

        // rules
        .drawTextBox ( 50, 600, 650, 350, JUSTIFY.VERTICAL.TOP  )
            .drawText ( '{{ rules }}', 'roboto', 45, JUSTIFY.HORIZONTAL.LEFT )
            .drawText ( '\n\n\n<$i>{{ flavor }}<$>', 'roboto', 35, JUSTIFY.HORIZONTAL.CENTER )
			
        // the 'wrapSVG' command can be used on drawTextBox and drawBarcode to wrap the command output
        //    .wrapSVG ( '<g transform = "translate ( 48.875 592.625 ) rotate ( 45 )">{{ body }}</g>' )

			
		// footer text
		.drawTextBox ( 30, 1000, 375, 20, JUSTIFY.VERTICAL.TOP  )
            .drawText ( '<$#ffffff>Art: {{ artist }}<$>', 'roboto', 20, JUSTIFY.HORIZONTAL.LEFT )		

		.drawTextBox ( 520, 1000, 200, 20, JUSTIFY.VERTICAL.TOP  )
            .drawText ( '<$#ffffff>www.VolitionCCG.com<$>', 'roboto', 20, JUSTIFY.HORIZONTAL.LEFT )	

		.drawTextBox ( 320, 1000, 110, 20, JUSTIFY.VERTICAL.CENTER  )
            .drawText ( '<$#ffffff>{{ rarity }}<$>', 'roboto', 18, JUSTIFY.HORIZONTAL.CENTER )	
			
    //----------------------------------------------------------------//		
    //----------------------------------------------------------------//
    .layout ( 'dude', 750, 1050, 300, '<g>{{ $$ }}</g>' ) // the last param is an optional SVG wrapper (for transforms)

        .drawSVG (`

		// header box
			<rect x='77.5' y='37.5' width='635' height='130' fill='#ffffff' fill-opacity='0.85' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='5'/>
			<rect x='77.5' y='37.5' width='635' height='130' fill='url(#{{ $ }}Fill-Color)' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='5'/>

		// attack box
			<rect x='634' y='47' width='70' height='55' fill='#ffffff' fill-opacity='0.85' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='2'/>
		// defense box
			<rect x='634' y='102' width='70' height='55' fill='#ffffff' fill-opacity='0.85' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='2'/>	
		        `)
				
	
		// left icon
		.drawTextBox ( 15, 29, 128, 128, JUSTIFY.VERTICAL.CENTER  )
            .drawText ( '{{ group }}', 'roboto', 128, JUSTIFY.HORIZONTAL.CENTER )	
			
		.drawBarcodeQR ( '{{ $ }}', 34, 47, 60,'L', 1 )	
			.wrapSVG ( '<g transform = "translate ( 90 0 ) rotate ( 45 )">{{ $$ }}</g>'	)
			
		// card name
        .drawTextBox ( 150, 45, 470, 40, JUSTIFY.VERTICAL.CENTER )
            .drawText ( '<$b>{{ name }}<$>', 'roboto', 40, JUSTIFY.HORIZONTAL.LEFT )
        // card type
        .drawTextBox ( 150, 87, 470, 37.5, JUSTIFY.VERTICAL.CENTER )
            .drawText ( '{{ superType }}{{ type }}{{ subType }}', 'roboto', 30, JUSTIFY.HORIZONTAL.LEFT )
        // access
        .drawTextBox ( 150, 123, 465, 37.5, JUSTIFY.VERTICAL.CENTER )
            .drawText ( '{{ access }}', 'roboto', 48, JUSTIFY.HORIZONTAL.LEFT )
			
		// attack
		.drawTextBox ( 644, 55, 50, 40, JUSTIFY.VERTICAL.CENTER  )
            .drawText ( '{{ attack }}', 'roboto', 55, JUSTIFY.HORIZONTAL.CENTER )
		// defense
		.drawTextBox ( 644, 109, 50, 40, JUSTIFY.VERTICAL.CENTER  )
            .drawText ( '{{ defense }}', 'roboto', 55, JUSTIFY.HORIZONTAL.CENTER )
			
    //----------------------------------------------------------------//
    //----------------------------------------------------------------//
    .layout ( 'item', 750, 1050, 300, '<g>{{ $$ }}</g>' ) // the last param is an optional SVG wrapper (for transforms)

        .drawSVG (`

		// header box
			<polygon points="143.5,37.5 621.5,37.5 631.5,47.5 631.5,157.5 621.5,167.5 143.5,167.5 133.5,157.5 133.5,47.5 " fill='#ffffff' fill-opacity='0.85' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='5'/>
			<polygon points="143.5,37.5 621.5,37.5 631.5,47.5 631.5,157.5 621.5,167.5 143.5,167.5 133.5,157.5 133.5,47.5 " fill='url(#{{ $ }}Fill-Color)' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='5'/>
				`)
					
		// left icon
		.drawTextBox ( 15, 29, 128, 128, JUSTIFY.VERTICAL.CENTER  )
            .drawText ( '{{ group }}', 'roboto', 128, JUSTIFY.HORIZONTAL.CENTER )	
			
		.drawBarcodeQR ( '{{ $ }}', 34, 47, 60,'L', 1 )	
			.wrapSVG ( '<g transform = "translate ( 90 0 ) rotate ( 45 )">{{ $$ }}</g>'	)
			
		// card name
        .drawTextBox ( 150, 45, 470, 40, JUSTIFY.VERTICAL.CENTER )
            .drawText ( '<$b>{{ name }}<$>', 'roboto', 40, JUSTIFY.HORIZONTAL.LEFT )
        // card type
        .drawTextBox ( 150, 87, 470, 37.5, JUSTIFY.VERTICAL.CENTER )
            .drawText ( '{{ superType }}{{ type }}{{ subType }}', 'roboto', 30, JUSTIFY.HORIZONTAL.LEFT )
        // access
        .drawTextBox ( 150, 123, 465, 37.5, JUSTIFY.VERTICAL.CENTER )
            .drawText ( '{{ access }}', 'roboto', 48, JUSTIFY.HORIZONTAL.LEFT )
						
    //----------------------------------------------------------------//	
	//----------------------------------------------------------------//
    .layout ( 'gear', 750, 1050, 300, '<g>{{ $$ }}</g>' ) // the last param is an optional SVG wrapper (for transforms)

        .drawSVG (`
		// attack box
			<rect x='634' y='47' width='70' height='55' fill='#ffffff' fill-opacity='0.85' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='2'/>
		// defense box
			<rect x='634' y='102' width='70' height='55' fill='#ffffff' fill-opacity='0.85' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='2'/>	
		        `)
				
		// attack
		.drawTextBox ( 644, 55, 50, 40, JUSTIFY.VERTICAL.CENTER  )
            .drawText ( '{{ attack }}', 'roboto', 55, JUSTIFY.HORIZONTAL.CENTER )
		// defense
		.drawTextBox ( 644, 109, 50, 40, JUSTIFY.VERTICAL.CENTER  )
            .drawText ( '{{ defense }}', 'roboto', 55, JUSTIFY.HORIZONTAL.CENTER )
    //----------------------------------------------------------------//
	//----------------------------------------------------------------//
    .layout ( 'event', 750, 1050, 300, '<g>{{ $$ }}</g>' ) // the last param is an optional SVG wrapper (for transforms)

        .drawSVG (`

		// header box
			<polygon points="133.5,37.5 620.5,37.5 712.5,102 620.5,167.5 133.5,167.5 37.5,101.5"  fill='#ffffff' fill-opacity='0.85' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='5' />
			<polygon points="133.5,37.5 620.5,37.5 712.5,102 620.5,167.5 133.5,167.5 37.5,101.5"  fill='url(#{{ $ }}Fill-Color)' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='5' />
			    `)
				
		// left icon
		.drawTextBox ( 15, 29, 128, 128, JUSTIFY.VERTICAL.CENTER  )
            .drawText ( '{{ group }}', 'roboto', 128, JUSTIFY.HORIZONTAL.CENTER )		
			
		.drawBarcodeQR ( '{{ $ }}', 34, 47, 60,'L', 1 )	
			.wrapSVG ( '<g transform = "translate ( 90 0 ) rotate ( 45 )">{{ $$ }}</g>'	)
							
		// card name
        .drawTextBox ( 150, 45, 470, 40, JUSTIFY.VERTICAL.CENTER )
            .drawText ( '<$b>{{ name }}<$>', 'roboto', 40, JUSTIFY.HORIZONTAL.LEFT )
        // card type
        .drawTextBox ( 150, 87, 470, 37.5, JUSTIFY.VERTICAL.CENTER )
            .drawText ( '{{ superType }}{{ type }}{{ subType }}', 'roboto', 30, JUSTIFY.HORIZONTAL.LEFT )
        // access
        .drawTextBox ( 150, 123, 465, 37.5, JUSTIFY.VERTICAL.CENTER )
            .drawText ( '{{ access }}', 'roboto', 48, JUSTIFY.HORIZONTAL.LEFT )
    //----------------------------------------------------------------//	
    //----------------------------------------------------------------//
    .layout ( 'trap', 750, 1050, 300, '<g>{{ $$ }}</g>' ) // the last param is an optional SVG wrapper (for transforms)

        .drawSVG (`
		
		// header box
			<polygon points="133.5,37.5 712.5,37.5 712.5,102 620.5,167.5 37.5,167.5 37.5,101.5"  fill='#ffffff' fill-opacity='0.85' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='5' />
			<polygon points="133.5,37.5 712.5,37.5 712.5,102 620.5,167.5 37.5,167.5 37.5,101.5"  fill='url(#{{ $ }}Fill-Color)' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='5' />
			     `)
				
		// left icon
		.drawTextBox ( 15, 29, 128, 128, JUSTIFY.VERTICAL.CENTER  )
            .drawText ( '{{ group }}', 'roboto', 128, JUSTIFY.HORIZONTAL.CENTER )	
						
		.drawBarcodeQR ( '{{ $ }}', 34, 47, 60,'L', 1 )	
			.wrapSVG ( '<g transform = "translate ( 90 0 ) rotate ( 45 )">{{ $$ }}</g>'	)
											 
		// card name
        .drawTextBox ( 150, 45, 470, 40, JUSTIFY.VERTICAL.CENTER )
            .drawText ( '<$b>{{ name }}<$>', 'roboto', 40, JUSTIFY.HORIZONTAL.LEFT )
        // card type
        .drawTextBox ( 150, 87, 470, 37.5, JUSTIFY.VERTICAL.CENTER )
            .drawText ( '{{ superType }}{{ type }}{{ subType }}', 'roboto', 30, JUSTIFY.HORIZONTAL.LEFT )
        // access
        .drawTextBox ( 150, 123, 465, 37.5, JUSTIFY.VERTICAL.CENTER )
            .drawText ( '{{ access }}', 'roboto', 48, JUSTIFY.HORIZONTAL.LEFT )
    //----------------------------------------------------------------//	
    //----------------------------------------------------------------//
    .layout ( 'asset', 750, 1050, 300, '<g>{{ $$ }}</g>' ) // the last param is an optional SVG wrapper (for transforms)
	
        .drawSVG (`
		    <rect x='0' y='0' width='750' height='1050' fill='#000000'/>
            <image x='-5' y='20' width='760' height='960' xlink:href='{{ image }}'/>
			//pframe
			<rect x='10' y='10' width='730' height='1030' fill-opacity='0' stroke='#000000' stroke-width='20'/>
		// header box
			<rect x='37.5' y='37.5' width='675' height='130' fill='#ffffff' fill-opacity='0.85' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='5'/>
			<rect x='37.5' y='37.5' width='675' height='130' fill='url(#{{ $ }}Fill-Color)' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='5'/>
		// rules box
			<rect x='37.5' y='785' width='675' height='175' fill='#ffffff' fill-opacity='0.85' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='5'/>
		// rarity box
			<rect x='320' y='995' width='110' height='28' fill='url(#{{ $ }}Stroke-Color)' fill-opacity='0.25' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='2'/>
        		`)
        // rules
        .drawTextBox ( 50, 800, 650, 150, JUSTIFY.VERTICAL.TOP  )
            .drawText ( '{{ rules }}', 'roboto', 45, JUSTIFY.HORIZONTAL.LEFT )
            .drawText ( '\n\n\n<$i>{{ flavor }}<$>', 'roboto', 35, JUSTIFY.HORIZONTAL.CENTER )
						
		// footer text
		.drawTextBox ( 30, 1000, 375, 20, JUSTIFY.VERTICAL.TOP  )
            .drawText ( '<$#ffffff>Art: {{ artist }}<$>', 'roboto', 20, JUSTIFY.HORIZONTAL.LEFT )		

		.drawTextBox ( 520, 1000, 200, 20, JUSTIFY.VERTICAL.TOP  )
            .drawText ( '<$#ffffff>www.VolitionCCG.com<$>', 'roboto', 20, JUSTIFY.HORIZONTAL.LEFT )	

		.drawTextBox ( 320, 1000, 110, 20, JUSTIFY.VERTICAL.CENTER  )
            .drawText ( '<$#ffffff>{{ rarity }}<$>', 'roboto', 18, JUSTIFY.HORIZONTAL.CENTER )	
				
		// left icon
		.drawTextBox ( 417, 48, 290, 89, JUSTIFY.VERTICAL.CENTER  )
            .drawText ( '{{ group }}', 'roboto', 128, JUSTIFY.HORIZONTAL.RIGHT )	
			
		// card name
        .drawTextBox ( 60, 65, 470, 45, JUSTIFY.VERTICAL.CENTER )
            .drawText ( '<$b>{{ name }}<$>', 'roboto', 45, JUSTIFY.HORIZONTAL.LEFT )
        // card type
        .drawTextBox ( 60, 110, 470, 37.5, JUSTIFY.VERTICAL.CENTER )
            .drawText ( '{{ superType }}{{ type }}{{ subType }}', 'roboto', 35, JUSTIFY.HORIZONTAL.LEFT )
    //----------------------------------------------------------------//
    //----------------------------------------------------------------//
    .layout ( 'core', 750, 1050, 300, '<g>{{ $$ }}</g>' ) // the last param is an optional SVG wrapper (for transforms)
	
        .drawSVG (`
		    <rect x='0' y='0' width='750' height='1050' fill='#000000'/>
            <image x='-5' y='20' width='760' height='960' xlink:href='{{ image }}'/>
			//pframe
			<rect x='10' y='10' width='730' height='1030' fill-opacity='0' stroke='#000000' stroke-width='20'/>
		// header box 
			<polygon points="37.5,37.5 712.5,37.5 670.999,99.389 172,99.389 145,130 37.5,130 " fill='#ffffff' fill-opacity='0.85' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='5'/>
			<polygon points="37.5,37.5 712.5,37.5 670.999,99.389 172,99.389 145,130 37.5,130 " fill='url(#{{ $ }}Fill-Color)' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='5'/>
		// rules box
			<rect x='21.5' y='485' width='707.5' height='495' fill='#ffffff' fill-opacity='0.85' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='5'/>
		// rarity box
			<rect x='320' y='995' width='110' height='28' fill='url(#{{ $ }}Stroke-Color)' fill-opacity='0.25' stroke='url(#{{ $ }}Stroke-Color)' stroke-width='2'/>
        		`)
        // rules
        .drawTextBox ( 37, 500, 672, 480, JUSTIFY.VERTICAL.TOP  )
            .drawText ( '{{ rules }}', 'roboto', 35, JUSTIFY.HORIZONTAL.LEFT )
            .drawText ( '\n\n\n<$i>{{ flavor }}<$>', 'roboto', 30, JUSTIFY.HORIZONTAL.CENTER )
						
		// footer text
		.drawTextBox ( 30, 1000, 375, 20, JUSTIFY.VERTICAL.TOP  )
            .drawText ( '<$#ffffff>Art: {{ artist }}<$>', 'roboto', 20, JUSTIFY.HORIZONTAL.LEFT )		

		.drawTextBox ( 520, 1000, 200, 20, JUSTIFY.VERTICAL.TOP  )
            .drawText ( '<$#ffffff>www.VolitionCCG.com<$>', 'roboto', 20, JUSTIFY.HORIZONTAL.LEFT )	

		.drawTextBox ( 320, 1000, 110, 20, JUSTIFY.VERTICAL.CENTER  )
            .drawText ( '<$#ffffff>{{ rarity }}<$>', 'roboto', 18, JUSTIFY.HORIZONTAL.CENTER )	
				
		// left icon
		.drawTextBox ( 417, 48, 290, 89, JUSTIFY.VERTICAL.CENTER  )
            .drawText ( '{{ group }}', 'roboto', 128, JUSTIFY.HORIZONTAL.RIGHT )		
						
		.drawBarcodeQR ( '{{ $ }}', 0, 0, 60,'L', 1 )	
			.wrapSVG ( '<g transform = "translate ( 646 56 ) rotate ( 45 )">{{ $$ }}</g>'	)	
			
		// card name
        .drawTextBox ( 55, 50, 470, 45, JUSTIFY.VERTICAL.CENTER )
            .drawText ( '<$b>{{ name }}<$>', 'roboto', 45, JUSTIFY.HORIZONTAL.LEFT )
        // card type
        .drawTextBox ( 60, 95, 470, 30, JUSTIFY.VERTICAL.CENTER )
            .drawText ( '{{ superType }}{{ type }}{{ subType }}', 'roboto', 30, JUSTIFY.HORIZONTAL.LEFT )
    //----------------------------------------------------------------//		
	

	.layout ( 'B', 750, 1050, 300 )
   		.drawSVG (`
				<linearGradient id="{{ $ }}Stroke-Color">
        			<stop offset="0%" stop-color="red" />
    			</linearGradient>
				<linearGradient id="{{ $ }}Fill-Color">
        			<stop offset="45%" stop-color="red" stop-opacity="0"/>
					<stop offset="100%" stop-color="red" stop-opacity=".3"/>
    			</linearGradient>	
		`)

	.layout ( 'D', 750, 1050, 300 )
   		.drawSVG (`
				<linearGradient id="{{ $ }}Stroke-Color">
        			<stop offset="0%" stop-color="green" />
    			</linearGradient>
				<linearGradient id="{{ $ }}Fill-Color">
        			<stop offset="45%" stop-color="green" stop-opacity="0"/>
					<stop offset="100%" stop-color="green" stop-opacity=".3"/>
    			</linearGradient>
		`)
	.layout ( 'E', 750, 1050, 300 )
   		.drawSVG (`
				<linearGradient id="{{ $ }}Stroke-Color">
        			<stop offset="0%" stop-color="#0099ff" />
    			</linearGradient>
				<linearGradient id="{{ $ }}Fill-Color">
        			<stop offset="45%" stop-color="#0099ff" stop-opacity="0"/>
					<stop offset="100%" stop-color="#0099ff" stop-opacity=".3"/>
    			</linearGradient>
		`)		
	.layout ( 'G', 750, 1050, 300 )
   		.drawSVG (`
				<linearGradient id="{{ $ }}Stroke-Color">
        			<stop offset="0%" stop-color="yellow" />
    			</linearGradient>
				<linearGradient id="{{ $ }}Fill-Color">
        			<stop offset="45%" stop-color="yellow" stop-opacity="0"/>
					<stop offset="100%" stop-color="yellow" stop-opacity=".3"/>
    			</linearGradient>
		`)
	.layout ( 'T', 750, 1050, 300 )
   		.drawSVG (`
				<linearGradient id="{{ $ }}Stroke-Color">
        			<stop offset="0%" stop-color="purple" />
    			</linearGradient>
				<linearGradient id="{{ $ }}Fill-Color">
        			<stop offset="45%" stop-color="purple" stop-opacity="0"/>
					<stop offset="100%" stop-color="purple" stop-opacity=".3"/>
    			</linearGradient>
		`)
	.layout ( 'E-B', 750, 1050, 300 )
   		.drawSVG (`
				<linearGradient id="{{ $ }}Stroke-Color">
        			<stop offset="0%" stop-color="#0099ff"/>
					<stop offset="45%" stop-color="#0099ff"/>
        			<stop offset="65%" stop-color="red"/>
					<stop offset="100%" stop-color="red"/>
    			</linearGradient>
		`)
	.layout ( 'E-D', 750, 1050, 300 )
   		.drawSVG (`
				<linearGradient id="{{ $ }}Stroke-Color">
        			<stop offset="0%" stop-color="#0099ff"/>
					<stop offset="45%" stop-color="#0099ff"/>
        			<stop offset="65%" stop-color="green"/>
					<stop offset="100%" stop-color="green"/>
    			</linearGradient>
		`)
	.layout ( 'E-G', 750, 1050, 300 )
   		.drawSVG (`
				<linearGradient id="{{ $ }}Stroke-Color">
        			<stop offset="0%" stop-color="#0099ff"/>
					<stop offset="45%" stop-color="#0099ff"/>
        			<stop offset="65%" stop-color="yellow"/>
					<stop offset="100%" stop-color="yellow"/>
    			</linearGradient>
		`)
	.layout ( 'E-T', 750, 1050, 300 )
   		.drawSVG (`
				<linearGradient id="{{ $ }}Stroke-Color">
        			<stop offset="0%" stop-color="#0099ff"/>
					<stop offset="45%" stop-color="#0099ff"/>
        			<stop offset="65%" stop-color="purple"/>
					<stop offset="100%" stop-color="purple"/>
    			</linearGradient>
		`)
	.layout ( 'B-D', 750, 1050, 300 )
   		.drawSVG (`
				<linearGradient id="{{ $ }}Stroke-Color">
        			<stop offset="0%" stop-color="red"/>
					<stop offset="45%" stop-color="red"/>
        			<stop offset="65%" stop-color="green"/>
					<stop offset="100%" stop-color="green"/>
    			</linearGradient>
		`)
	.layout ( 'B-G', 750, 1050, 300 )
   		.drawSVG (`
				<linearGradient id="{{ $ }}Stroke-Color">
        			<stop offset="0%" stop-color="red"/>
					<stop offset="45%" stop-color="red"/>
        			<stop offset="65%" stop-color="yellow"/>
					<stop offset="100%" stop-color="yellow"/>
    			</linearGradient>
		`)
	.layout ( 'B-T', 750, 1050, 300 )
   		.drawSVG (`
				<linearGradient id="{{ $ }}Stroke-Color">
        			<stop offset="0%" stop-color="red"/>
					<stop offset="45%" stop-color="red"/>
        			<stop offset="65%" stop-color="purple"/>
					<stop offset="100%" stop-color="purple"/>
    			</linearGradient>
		`)
	.layout ( 'D-G', 750, 1050, 300 )
   		.drawSVG (`
				<linearGradient id="{{ $ }}Stroke-Color">
        			<stop offset="0%" stop-color="green"/>
					<stop offset="45%" stop-color="green"/>
        			<stop offset="65%" stop-color="yellow"/>
					<stop offset="100%" stop-color="yellow"/>
    			</linearGradient>
		`)
	.layout ( 'D-T', 750, 1050, 300 )
   		.drawSVG (`
				<linearGradient id="{{ $ }}Stroke-Color">
        			<stop offset="0%" stop-color="green"/>
					<stop offset="45%" stop-color="green"/>
        			<stop offset="65%" stop-color="purple"/>
					<stop offset="100%" stop-color="purple"/>
    			</linearGradient>
				<linearGradient id="{{ $ }}Fill-Color">
        			<stop offset="45%" stop-color="green" stop-opacity="0"/>
        			<stop offset="65%" stop-color="green" stop-opacity=".3"/>
					<stop offset="100%" stop-color="purple" stop-opacity=".3"/>
    			</linearGradient>	
		`)
	.layout ( 'G-T', 750, 1050, 300 )
   		.drawSVG (`
				<linearGradient id="{{ $ }}Stroke-Color">
        			<stop offset="0%" stop-color="yellow"/>
					<stop offset="45%" stop-color="yellow"/>
        			<stop offset="65%" stop-color="purple"/>
					<stop offset="100%" stop-color="purple"/>
    			</linearGradient>
		`)
	.layout ( 'E-G-T', 750, 1050, 300 )
   		.drawSVG (`
				<linearGradient id="{{ $ }}Stroke-Color">
        			<stop offset="0%" stop-color="#0099ff"/>
					<stop offset="30%" stop-color="#0099ff"/>
        			<stop offset="35%" stop-color="yellow"/>
					<stop offset="65%" stop-color="yellow"/>
        			<stop offset="70%" stop-color="purple"/>
					<stop offset="100%" stop-color="purple"/>
    			</linearGradient>
		`)
	.layout ( 'E-G-D-T', 750, 1050, 300 )
   		.drawSVG (`
				<linearGradient id="{{ $ }}Stroke-Color">
        			<stop offset="0%" stop-color="#0099ff"/>
					<stop offset="18%" stop-color="#0099ff"/>
        			<stop offset="28%" stop-color="yellow"/>
					<stop offset="46%" stop-color="yellow"/>
        			<stop offset="56%" stop-color="green"/>
					<stop offset="74%" stop-color="green"/>
        			<stop offset="83%" stop-color="purple"/>
					<stop offset="100%" stop-color="purple"/>
    			</linearGradient>	
		`)		
	.layout ( 'black', 750, 1050, 300 )
   		.drawSVG (`
				<linearGradient id="{{ $ }}Stroke-Color">
        			<stop offset="0%" stop-color="black"/>
    			</linearGradient>
		`)			
		
    .layout ( 'overlay', 750, 1050, 300 )

        .drawSVG (`
            <circle cx='375' cy='525' r='372' stroke='#00ffff' stroke-width='20' fill='none'/>
        `)

    //----------------------------------------------------------------//
    .layout ( 'dude-overlay', 750, 1050, 300 )

        .drawLayout ( 'dude' )
        .drawLayout ( 'overlay' )

const schema = util.parseVolitionXLSX ( schemaBuilder );

//util.writeJavascript ( schema, 'schema.js' );
util.writeJSON ( schema, 'schema.json' );
//util.writeTransaction ( schema, 'publish-schema-transaction.json' );
