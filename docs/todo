
DONE: rework asset tracking - no generics; every asset to be unique
DONE: decide on final asset identifier format
DONE: implement asset customization (assets to be customized via methods)
DONE: card modification through crafting
DONE: variable-size transactions (multiple crafting commands per transaction)
DONE: template cards using SVG and mustache
DONE: expand schema to include svg templates
DONE: finalize schema - where do resources live?
DONE: wallet inventory - collection screen
DONE: wallet inventory - filtering
DONE: wallet inventory - printing
DONE: wallet inventory - indicate craftability
DONE: wallet inventory - crafting screen
DONE: wallet inventory - rendering svg for print
DONE: implement queue of transactions in wallet - rebuild state dynamically (from node)
DONE: rethink state handling in wallet
DONE: svg barcode
DONE: revise layout schema - address SVG shortcomings
DONE: tool to generate set schema from XLS spreadsheet
DONE: add schema to genesis block
DONE: sign transaction
DONE: account permissions - god keys, publisher keys
DONE: identify (mining) networks (by genesis block) - name networks; i.e. test network, production network
DONE: commands for test account
DONE: provision every asset in set
DONE: provision beta account - generate key
DONE: add banner at the top of wallet showing mining network name
DONE: implement massively complicated layout engine
DONE: add support for QR codes
DONE: support loading genesis chain
DONE: layout engine - implement underline and divider
DONE: layout engine - bump icons up and down
DONE: layout engine - nested layouts
DONE: layout engine - set underline style for text box (color, weight)
DONE: layout engine - named text styles (implemented as spreadsheet macros)
DONE: upgrade & rebuild versioned store; restore from chain
DONE: inventory view - remove hardcoded card size
DONE: layout tool - schema from spreadsheet
DONE: layout tool - favicon
DONE: layout tool - cors-anywhere (fork and host) - sovled with nginx
DONE: layout tool - provision temporary assets based on * column
DONE: layout tool - finish automatic definition name generation
DONE: layout tool - implement INCLUDES directive
DONE: layout tool - as-defined sort order option
DONE: layout tool - fix space-before-line-break bug
DONE: inventory view - handle different sized cards
DONE: layout tool - handle oversized assets
DONE: layout tool - print layout for variable-sized assets
DONE: layout tool - factor out selection behavior (no tags)
DONE: layout tool - finish docs + coding style guide
DONE: wallet - (simple) tagging sets of cards
DONE: upgrade assets
DONE: asset updates
DONE: wallet - fix asset display glitch (doesn't match cardmotron)
DONE: node - enforce block size limits (in points)
DONE: node - apply gratuity
DONE: create dump account
DONE: fix schema publishing (collisions)
DONE: add deck declarations to schema
DONE: add 'get deck' transaction type
DONE: wallet - add password option to transaction modal (to submit immediately)

----------------------------------------------------------------
BETA

DONE: crafting - booster packs
DONE: crafting - data tables (booster pack awards)
DONE: batch transfer assets to other accounts
DONE: wallet - popup when new assets received (hide assets until reviewed)
DONE: node - batch transactions in solo mode
DONE: wallet - show asset IDs in upgrades interface
DONE: wallet - roll crafting interface into inventory view
DONE: wallet - roll upgrades interface into inventory view
DONE: wallet - collapse identical cards in inventory view
DONE: wallet - add way to tag new assets (from inbox; supply default tag)
DONE: node - properly check account name changes to exclude illegal characters
DONE: wallet - validate name change requests
DONE: node - version mining node (with git hash)
DONE: wallet - show mining node version in dashboard view
DONE: node/schema - replace schema name with version (schema is a composite; one per ledger)
DONE: wallet - show schema version
DONE: node - handle unrecognized account - reject transactions
DONE: node - implement way to expire transactions
DONE: wallet - show transaction weight on transaction form
DONE: node - complete account renaming process
DONE: wallet - add '.png' extension to download
DONE: wallet - some transactions not working (sponsor account)
DONE: node - sparse asset API (return sparse assets)
DONE: schema - customizable asset fields
DONE: node - make schema unique key (from hash)
DONE: wallet - use schema unique key as cache key
DONE: node - publish schema and reset chain
DONE: node - disabled reset chain with CLI flag
DONE: node - rework node control endpoints into "control" transactions
DONE: node - return lua stack trace/error messages
DONE: wallet - update cardmotron
DONE: node - award vol scripting command
DONE: wallet - customize art URL via crafting
DONE: wallet - (bug) user-provided URLs should be case sensitive
DONE: wallet - (bug) duplicates are collapsed in crafting asset picker
DONE: wallet - strictly order state service polling
DONE: node - (bug) reset asset field not updating inventory nonces
DONE: wallet - add event listener for IndexedDB (to handle multi-tab updates) - just used account version stamp

DONE: node - add timstamps and lookback to simulator
DONE: node - test lookback scenarios
DONE: node - consensus for missing blocks (header is published but not block)
DONE: node - enforce mining key permissions (mining keys use default entitlements)
DONE: node - sqlite persistence (or anything ACID)
DONE: node - report other active nodes
DONE: node - sponsor miner transaction
DONE: node - mining reward from block
DONE: wallet - decimal points for VOL (3)
DONE: schema - mining reward definition and schedule
DONE: node - import accounts
DONE: node - set minimal time between blocks
DONE: node - set block size (protocol param setup)
DONE: node - high-confidence chain (based on consensus)
DONE: node - implement rake
DONE: node - implement tax
DONE: node - fixed gratuity requirement
DONE: node - make sure transactions can be resubmitted with new gratuity
DONE: node - alert users when their transactions are declined for insufficient gratuity
DONE: node - setup guide

----------------------------------------------------------------
OPEN BETA

DONE: mining - blocks mined counter
DONE: node - publish mining rewards from schema
DONE: node - automatic reward selection
DONE: node - mining reward fallback (detect if no reward and fallback on next reward)
DONE: wallet - key tool (export JSON keys)
DONE: wallet - schema tool (export JSON schema)
DONE: node - record account transaction lookup (block number and transaction index) per nonce
DONE: node - implement transaction history endpoint
DONE: wallet - add transaction history diagnostic
DONE: wallet - preview provisioned account name when sponsoring an account
DONE: wallet - embed genesis hash in new account requests (and check against correct genesis)
DONE: bot - make a discord bot to provision accounts and register miners
DONE: node - refactor miner resource multithread access
DONE: art attachment
DONE: find out why decks aren't being mined
DONE: wallet - prevent unconsumed crafting assets from being hidden
DONE: node - function to reset entire asset
DONE: node - implement TOS (user and miner)
DONE: miners choose reward
DONE: ledger, wallet - asset sale transaction

schema - image box layout item - check hash
schema - add hash to font
wallet - render image boxes in layouts
wallet - check resources hashes
wallet - util for getting hashes of resources (from given URL)
wallet - sanitize svg layout template values (prevent javascript injection) - DOMPurify
wallet - vol param type for crafting methods
wallet - other numeric param types for crafting methods
node - prevent stamp scripts from overwriting fields if empty string is given
node - send error messages from inside script
node - scripting method to remove a stamp from an asset

----------------------------------------------------------------
PRE-LAUNCH

digital koi fish - store vol in an asset
asset auction
node - add mutex and accessor for transaction queue
mining - chain ToS (copyright/trademark inheritance)
bot - link discord accounts to vol accounts

node - auctioneer transaction (and prevent resale of inventory held in trust)
wallet - auction service (headless, integrate with wallet)

mining - legal ToS
identity - identity provisioning for miners
ledger, wallet - art crafting and asset residuals

node - vol sales matchmaking

----------------------------------------------------------------
LAUNCH

node - capture transactions when rewinding chain
node - implement pluggable transaction database (mysql and in-memory drivers)

wallet - RSA key support
wallet - mining account request (RSA key, motto, visage)
wallet - multi-node scan, consensus and transaction dispatch

mining - onboard new miners (check certs)

node - publish default media url prefix (from schema, with miner override)

schema - asset visualization descriptor (i.e. 2D/3D, front/back, language, etc.)
schema - asset definition inheritance (sparse updrages)
schema - default tags?
schema - reserved asset fields?

wallet - detect stale keys (account name matches, but wrong/old key)
wallet - asset visualization selector
wallet - customize asset fields - images, text
wallet - add configurable media url prefix
wallet - schema explorer
wallet - display all (historic) transactions of selected account
wallet - filter inventory by asset exchange metadata
wallet - deck building - decks are sets of filters and quantities
wallet - discard all (by set)
wallet - provision local cards
wallet - network configuration screen (default transaction expiration, etc.)

validator app - scan the QR code and return raw card data including the owner

layout tool - better error reporting from card layouts (missing fonts, icons)
layout tool - line spacing
layout tool - kerning
layout tool - paragraph styles (leading indent)
layout tool - justify text
layout tool - layouts-as-icons (and/or "layered" icons)

node - finalize multi-part transaction implementation
node - reimplement 'run script' as multi-part transaction
node - per asset modification metadata
node - record asset exchange metadata (inventory nonce, sender, note)

node - VOLOPT (transaction fees)
node - exercise option transaction (claim mining reward)

----------------------------------------------------------------
MINING NETWORK

- remove non-responsive miners from the pool (after N missed blocks)
- uniquely identify mining pool forks
	- changes to mining pool
	- history of pool changes (to tell if a fork is an ancestor of another)
	- wallet can identify multiple forks (and reject smaller forks?)
